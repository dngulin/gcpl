import { Style } from "style.slint";
import { AppIcon } from "appicon.slint";

export struct AppIconModel { 
    name: string,
    image: image,
}

export component AppIconList inherits Flickable {
    in property <length> icon-size;
    in property <[AppIconModel]> model;

    in-out property <bool> is-interactive: true;
    out property <int> selected-index: 0;

    property <length> item-size: icon-size * 1.3;

    height: item-size;
    viewport-height: item-size;
    interactive: false;

    animate viewport-x { duration: 150ms; }

    selection := Rectangle {
        x: selected-index * item-size;
        y: 0px;
        width: item-size;
        height: item-size;
        background: Style.panel-color;
        border-radius: item-size / 20;

        animate x { duration: 150ms; }
    }

    HorizontalLayout {
        for item in model: AppIcon {
            size: item-size;
            icon-size: icon-size;
            icon-name: item.name;
            icon-image: item.image;
        }
    }

    public function invalidate_state() {
        selected-index = 0;
        self.viewport-x = 0;
    }

    public function move_selection_right() {
        selected-index = Math.min(selected-index + 1, model.length - 1);

        if (selection_r() > port_r()) {
            move_port(selection_r() - port_r());
        }
    }

    public function move_selection_left() {
        selected-index = Math.max(selected-index - 1, 0);

        if (selection_l() < port_l()) {
            move_port(selection_l() - port_l());
        }
    }

    function selection_l() -> length {
        item-size * selected-index
    }

    function selection_r() -> length {
        item-size * (selected-index + 1)
    }

    function port_l() -> length {
        -self.viewport-x
    }

    function port_r() -> length {
        -self.viewport-x + self.width
    }

    function move_port(value: length) {
        self.viewport-x -= value;
    }
}
