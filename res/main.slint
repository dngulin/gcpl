import { GamepadModel, GamepadList } from "gamepad-list.slint";
import { AppIconModel, AppIconList } from "appicon-list.slint";
import { Background } from "background.slint";
import { Style } from "style.slint";

export { Style }

export global ScreenLayout {
    out property <length> default-top-panel-height: 32px;
    out property <length> default-clock-height: 270px;
    out property <length> default-icon-size: 128px;

    in property <length> top-panel-height: default-top-panel-height;
    in property <length> clock-height: default-clock-height;
    in property <length> icon-size: default-icon-size;
}

export component GpclApp inherits Window {
    title: "GPCL";

    in property <[GamepadModel]> gamepad_list <=> gamepad-list.model;
    in property <[AppIconModel]> app_list <=> app-list.model;

    in property <string> clock_text <=> clock.text;

    callback app_icon_activated(int);
    callback reload_pressed;

    default-font-family: Style.font-family;
    default-font-weight: Style.font-weight;
    forward-focus: focus-scope;

    focus-scope := FocusScope {
        key-pressed(event) => {
            if (app-list.is-interactive) {
                if (event.text == Key.RightArrow) {
                    app-list.move_selection_right();
                } else if (event.text == Key.LeftArrow) {
                    app-list.move_selection_left();
                } else if (event.text == Key.Return) {
                    root.app_icon_activated(app-list.selected-index);
                    app-list.is-interactive = false;
                }
            }
            accept
        }
        key-released(event) => {
            if (event.text == Key.F5) {
                root.reload_pressed();
                app-list.invalidate_state();
            }
            accept
        }
    }

    bg := Background {
        background: Style.bg-color;
    }

    VerticalLayout {
        alignment: stretch;

        gamepad-list := GamepadList {
            height: ScreenLayout.top-panel-height;
            alignment: end;
        }

        clock := Text {
            color: Style.text-color;
            font-size: ScreenLayout.clock-height;
            horizontal-alignment: center;
            vertical-alignment: center;
            wrap: word-wrap;
        }

        HorizontalLayout {
            alignment: center;
            app-list := AppIconList {
                icon-size: ScreenLayout.icon-size;
            }
        }

        spacer := Rectangle {
            height: app-list.height / 2;
        }
    }

    public function set_child_process_state(is_running: bool) {
        app-list.is-interactive = !is_running;
    }
}
